Вопросы к устному зачёту
########################

:date: 2020-05-18 09:00
:summary: Вопросы билетов устного зачёта, особенности процедуры сдачи.
:status: draft

.. default-role:: code
.. contents:: Содержание


Расписание
==========

Зачёт проходит с 20 по 26 мая в режиме онлайн.

Каждый семинарист назначит несколько дней для сдачи зачета, т.к. в онлайн режиме это может быть
дольше (не удобно одновременно принимать у нескольких студентов и тд). Время сдачи зачета узнавайте
у своего семинариста.

Сдача другому преподавателю возможна, просто заранее договоритесь с преподавателем и своим
семинаристом.

Процедура приёма зачёта
-----------------------

Процедура сдачи зачета проходит в режиме онлайн. Связь с преподавателем осуществляется при помощи
программ для онлайн конференций (zoom, google meet и др). Веб-камера и микрофон обязательны. Студент
должен заранее подготовить оборудование, проверить его на работоспособность. Любые неполадки со
стороны студента не являются основанием на освобождение от зачета. Если до конца зачетной недели
студент не сдал зачет по техническим причинам с его стороны, это будет считаться неявкой!

Оценка по информатике ставится в результате устного ответа на дифференцированном зачёте.
Преподаватель учебной группы имеет право в одной учебной группе поставить одному студенту "автомат".

Сдача происходит по билетам. В билете содержится два вопроса из основного списка и задача. На
подготовку студенту отводится не более 20 минут. Преподаватель слушает ответы на вопросы в билете,
а также может задать дополнительные вопросы, как из основного списка, так и любых других по
программе курса. Задачу студент сдает в форме работающего кода.

Использование на зачёте любых **посторонних** цифровых и бумажных носителей информации студентом
недопустимо! Допустимы только ручка, чистая бумага и компьютер/ноутбук, по которому осуществляется
связь. По требованию преподавателя студент должен показать экран. Во время сдачи зачета на компьюете
могут быть запущено только следующее ПО: IDE (или текстовый редактор), терминал/cmd/powershell,
программа для связи и ПО в фоновом режиме. Запущенные даже в фоновом режиме мессенджеры
**строго запрещены**.

**NB!**
На основании систематического списывания обучающимся при работе в семестре преподаватель учебной
группы имеет право не допустить студента к зачёту в общем порядке. В этом случае студент сдаёт зачёт
комиссии из двух-трёх преподавателей. Пересдача в таких случаях также сдаётся комиссии
преподавателей.

Список вопросов
---------------

#. Хеширование. Полиномиальный хеш. Алгоритм Рабина-Карпа.
#. Открытая хеш и закрытая хеш-таблицы. Проблема удаления из закрытой хеш-таблицы. Перехеширование.
#. Словари и множества в Python.
#. Списки: односвязный, двусвязный, кольцо. Время работы основных операций (добавление в начало/конец, удаление с начала/конца, обращение к произвольному элементу).
#. Куча. Сортировка кучей.
#. Определение графа. Степень вершины, петли, кратные рёбра. Цепи, пути и циклы.
#. Сильная и слабая связность графа. Компоненты связности.
#. Способы представления графа в памяти: список рёбер, матрица смежности, списки смежности.
#. Выделение компоненты связности обходом в глубину.
#. Проверка двудольности графа.
#. Проверка графа на ацикличность или нахождение цикла обходом в глубину.
#. Алгоритм Косарайю выделения компонент сильной связности орграфа.
#. Топологическая сортировка. Алгоритм Тарьяна.
#. Выделение компонент связности обходом в ширину.
#. Нахождение кратчайшего цикла в невзвешенном графе.
#. Алгоритм Дейкстры (наивная реализация).
#. Алгоритм Дейкстры с кучей.
#. Алгоритм Флойда-Уоршелла.
#. Алгоритм Форда-Беллмана.
#. Остовные деревья. Алгоритм Прима (наивная реализация).
#. Остовные деревья. Алгоритм Краскала. Система непересекающихся множеств для оптимизации алгоритма. (Все без доказательств)
#. Игры на ациклических графах. Решение поиском в глубину.
#. Сумма игр. Функция Шпрага-Гранди.
#. Игры на произвольных графах.

Во всех алгоритмах и структурах данных требуются оценки времени работы с доказательством, только
если не сказано обратное.

Оценка на зачёте
----------------

Основанием для рейтинговой оценки служат три оценки:

#. Контрольная №1
#. Контрольная №2
#. Средняя оценка за все контесты

Преподаватель, экзаменующий студента, видит все эти оценки по отдельности, а также рекомендуемую
итоговую оценку, которая вычисляется по этим пяти оценкам автоматически. Исходя из ответа студента
итоговая оценка в зачётку может быть отклонена от рекомендуемой на ±2 балла (по 10-балльной шкале).
Если преподаватель хочет повысить или понизить оценку на большее число баллов, он советуется со
вторым преподавателем, присутствующим на зачёте.

.. Студент при несогласии с итоговой оценкой может потребовать апелляции у лектора, но за это придётся
.. рискнуть 1 баллом. Если апелляция не будет успешной, и лектор полностью согласится с
.. преподавателем-экзаменатором в его оценке знаний студента, то итоговая оценка будет *понижена* на 1
.. балл (по 10-балльной шкале).

.. Апелляция проходит в пятницу зачётной недели.


Почему дифференцированный зачёт сдаётся устно
---------------------------------------------

#. Во-первых, это возможность проверить знание студентом тем, вошедших в курс лекций, но не вошедших прямо в лабораторные работы.
#. Во-вторых, устный ответ расширяет у студента актив понятийного аппарата информатики, развивает умение связно излагать свои мысли на языке предмета.
#. В-третьих, устный ответ даёт возможность преподавателю осознать уровень самостоятельности студента при написании им лабораторных работ.
#. В-четвёртых, устный ответ позволяет студенту, продемонстрировавшему свои знания на зачёте, повысить оценку, которая получается исходя из рейтинга за работы в семестре.
#. И в пятых, повторение материала лекций в конце семестра приводит к лучшему запоминанию материала и откладыванию его в долгую память.

Успехов в подготовке к зачёту!
